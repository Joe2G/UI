import React, { useState } from 'react';
import { View, Text, TextInput, Button, Alert, StyleSheet } from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';
import useAppStore from '../stores/appStore';
import useUsername from '../hooks/useUsername';
import axios from 'axios';
import { SERVER_URL } from '../config';

export default function SignInScreen({ navigation }) {
  useUsername();
  const { setUser } = useAppStore();
  const [username, setUsername] = useState('');

  const handleSubmit = async () => {
    const trimmedUsername = username.trim();
    if (!trimmedUsername) {
      Alert.alert('Input Error', 'Please enter a username');
      return;
    }
  
    console.log('[FRONTEND] Attempting registration with:', {
      username: trimmedUsername
    });
  
    try {
      // Send registration request
      const response = await axios.post(`${SERVER_URL}/api/register`, {
        username: trimmedUsername
      }, { timeout: 10000 });
  
      console.log('[FRONTEND] Server response:', response.data);
  
      if (!response.data?.password || !response.data?.username) {
        throw new Error('Invalid server response structure');
      }
  
      // Store user data
      const userData = {
        id: response.data.password, // Use the UUID generated by the backend
        username: response.data.username
      };
  
      console.log('[FRONTEND] Storing user data:', userData);
      await AsyncStorage.setItem('user', JSON.stringify(userData));
      setUser(userData);
  
      // Force navigation
      console.log('[FRONTEND] Navigating to ChatList');
      navigation.replace('ChatList');
    } catch (error) {
      console.error('[FRONTEND] Registration error:', error.response?.data || error.message);
      let errorMessage = error.response?.data?.error || 'Failed to create account';
      Alert.alert('Error', errorMessage);
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Welcome To YChat</Text>
      <Text style={styles.subtitle}>Get Started</Text>
      <Text style={styles.label}>Enter your username</Text>

      <TextInput
        placeholder="Username"
        style={styles.input}
        value={username}
        onChangeText={setUsername}
        autoCapitalize="none"
        autoCorrect={false}
        testID="usernameInput"
      />

      <Button
        title="Continue"
        onPress={handleSubmit}
        color="#000000"
        testID="submitButton"
      />

      <Text style={styles.footer}>This App is made By Joe</Text>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 30,
    justifyContent: 'center',
    backgroundColor: '#FFF',
  },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    alignSelf: 'center',
    marginBottom: 10,
  },
  subtitle: {
    fontSize: 18,
    alignSelf: 'center',
    marginBottom: 15,
  },
  label: {
    fontSize: 16,
    alignSelf: 'center',
    marginBottom: 10,
  },
  input: {
    height: 40,
    borderWidth: 1,
    borderColor: '#888',
    paddingHorizontal: 10,
    marginBottom: 20,
    borderRadius: 8,
  },
  footer: {
    marginTop: 40,
    textAlign: 'center',
    color: '#999',
    fontSize: 12,
  },
});
